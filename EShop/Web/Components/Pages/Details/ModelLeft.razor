@using Models.ViewModels
@using Telerik.Blazor
@using Telerik.Blazor.Components
@using Telerik.FontIcons
@using Telerik.SvgIcons
@inject IJSRuntime JSRuntime

<TelerikRootComponent>
    <div class="model-data-left-container">
        <div class="model-data-row">
            <span class="title">Product Name</span>
            <span class="value">@Model.Name</span>
        </div>
        <div class="model-data-row">
            <span class="title">Product No</span>
            <span class="value">@Model.ProductNumber</span>
        </div>
        @if (Model.Size != null)
        {
            <div class="model-data-row">
                <span class="title">Size</span>
                <span class="value size">
                    <TelerikDropDownList Data="@AvailableSizes"
                                         @bind-Value="@Model.Size"
                                         TextField="@Model.Size"
                                         ValueField="@Model.Size"
                                         Size="@ThemeConstants.DropDownList.Size.Medium"
                                         OnChange="@SelectAlternateProductVersion">
                    </TelerikDropDownList>
                </span>
            </div>
        }
        @if (Model.Weight != 0)
        {
            <div class="model-data-row">
                <span class="title">Weight</span>
                <span class="value">@Model.Weight</span>
            </div>
        }
        @if (Model.Color != null)
        {
            <div class="model-data-row">
                <span class="title">Color</span>
                <TelerikRadioGroup Data="@AvailableColors"
                                   @bind-Value="@Model.Color"
                                   Layout="@RadioGroupLayout.Horizontal"
                                   OnChange="@SelectAlternateProductVersion">
                </TelerikRadioGroup>
            </div>
        }
        @if (Model.Description != null)
        {
            <div class="model-data-row">
                <span class="title">Description</span>
                <span class="value model-description">@Model.Description</span>
            </div>
        }
    </div>
</TelerikRootComponent>

@code {
    [Parameter]
    public ProductDetailsViewModel Model { get; set; } = new();

    [Parameter]
    public string[]? AvailableSizes { get; set; }

    [Parameter]
    public string[]? AvailableColors { get; set; }

    async Task SelectAlternateProductVersion() {
        if (Model.Size != null && Model.Color != null)
        {
            await JSRuntime.InvokeVoidAsync("BlazorShim.selectProductByColorAndSize", Model.ModelId, Model.Color, Model.Size);
        }
        else if (Model.Size != null)
        {
            await JSRuntime.InvokeVoidAsync("BlazorShim.selectProductBySize", Model.ModelId, Model.Size);
        }
        else if (Model.Color != null)
        {
            await JSRuntime.InvokeVoidAsync("BlazorShim.selectProductByColor", Model.ModelId, Model.Color);
        }
    }
}
